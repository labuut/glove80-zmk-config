/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define HYPER LC(LS(LG(LALT)))

// layers
#define LR_MAIN_EN  0
#define LR_MAIN_RU  1
#define LR_NUMS     2
#define LR_WILDS    3
#define LR_NAV      4
#define LR_SPEC     5
#define LR_SERV     6

/ {
    behaviors {
        // // NOTE: example, "LR_WILDS_WITH 0 TAB". 0 is dummy argument
        // // https://zmk.dev/docs/behaviors/hold-tap#using-different-behavior-types-with-hold-taps
        // LR_WILDS_WITH: LR_WILDS_WITH {
        //     compatible = "zmk,behavior-hold-tap";
        //     label = "LR_WILDS_WITH";
        //     #binding-cells = <2>;
        //     flavor = "hold-preferred";
        //     tapping-term-ms = <150>;
        //     // bindings = <hold>, <tap>;
        //     bindings = <&WILDS_RU>, <&kp>;
        // };

        // cmt - custom mod-tap
        cmt: cmt {
            compatible = "zmk,behavior-hold-tap";
            label = "custom-mod-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            // bindings = <hold>, <tap>;
            bindings = <&kp>, <&kp>;
        };

        EN_RU: EN_RU {
            compatible = "zmk,behavior-mod-morph";
            label = "EN_RU";
            #binding-cells = <0>;
            bindings = <&TO_MAIN_EN>, <&TO_MAIN_RU>;
            mods = <(MOD_LCTL)>;
        };
        
        DOT_RU: DOT_RU {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_RU";
            #binding-cells = <0>;
            bindings = <&mt DOT FSLH>, <&kp DOT>;
            mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI)>;
        };
        
        COMMA_RU: COMMA_RU {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_RU";
            #binding-cells = <0>;
            bindings = <&kp LS(FSLH)>, <&kp COMMA>;
            mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI)>;
        };
        
        FSLH_BSLH: FSLH_BSLH {
            compatible = "zmk,behavior-mod-morph";
            label = "FSLH_BSLH";
            #binding-cells = <0>;
            bindings = <&kp FSLH>, <&kp BSLH>;
            mods = <(MOD_LSFT)>;
        };
        
        L_PAR_BRC_BKT: L_PAR_BRC_BKT {
            compatible = "zmk,behavior-mod-morph";
            label = "L_PAR_BRC_BKT";
            #binding-cells = <0>;
            bindings = <&kp LPAR>, <&cmt LBKT LBRC>;
            mods = <(MOD_LSFT)>;
        };
        
        R_PAR_BRC_BKT: R_PAR_BRC_BKT {
            compatible = "zmk,behavior-mod-morph";
            label = "R_PAR_BRC_BKT";
            #binding-cells = <0>;
            bindings = <&kp RPAR>, <&cmt RBKT RBRC>;
            mods = <(MOD_LSFT)>;
        };
    };

    macros {
        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = 
                <&out OUT_BLE>,
                <&bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&out OUT_BLE>,
                <&bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&out OUT_BLE>,
                <&bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&out OUT_BLE>,
                <&bt BT_SEL 3>;
        };

        LAYOUT_EN: LAYOUT_EN {
            label = "ZM_LAYOUT_EN";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <30>;
            bindings =
                <&kp LA(LS(N8))>; // <&kp CAPS>;
        };

        LAYOUT_RU: LAYOUT_RU {
            label = "ZM_LAYOUT_RU";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <30>;
            bindings =
                <&kp LA(LS(N9))>; // <&kp LS(CAPS)>;
        };

        TO_MAIN_EN: TO_MAIN_EN {
            label = "ZM_TO_MAIN_EN";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <30>;
            bindings =
                <&LAYOUT_EN>,
                <&to LR_MAIN_EN>;
            };

        TO_MAIN_RU: TO_MAIN_RU {
            label = "ZM_TO_MAIN_RU";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <30>;
            bindings =
                <&LAYOUT_RU>,
                <&to LR_MAIN_RU>;
        };

        WILDS_RU: WILDS_RU {
            label = "ZM_WILDS_RU";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <30>;
            bindings =
                <&LAYOUT_EN>,
                <&to LR_WILDS>,
                <&macro_pause_for_release>,
                <&to LR_MAIN_RU>,
                <&LAYOUT_RU>;
        };

        NUMBER_RU: NUMBER_RU {
            label = "ZM_NUMBER_RU";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <30>;
            bindings =
                <&LAYOUT_RU>,
                <&kp LS(N3)>,
                <&LAYOUT_EN>;
        };

        SRVC_TEST: SRVC_TEST {
            label = "ZM_SRVC_TEST";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <30>;
            bindings =
                <&kp S>,<&kp E>,<&kp R>,<&kp V>,<&kp I>,<&kp C>,<&kp E>;
        };        
    };

    combos { // indexes start from 0
        compatible = "zmk,combos";
        // EN/RU layout: K + L
        switch_lang_new {
            timeout-ms = <50>;
            key-positions = <42 43>;
            layers = <LR_MAIN_EN LR_MAIN_RU>; 
            bindings = <&EN_RU>;
        };
        // LR_SERVICE. Left half: top left (Esc) + all left thumb
        to_serv_left {
            timeout-ms = <100>;
            key-positions = <22 52 69 70>;
            layers = <LR_MAIN_EN LR_MAIN_RU>; 
            bindings = <&mo LR_SERV>;
        };
        // LR_SERVICE. Right half: top right (rus 'Ð¥') + all right thumb
        to_serv_right {
            timeout-ms = <100>;
            key-positions = <33 57 73 74>;
            layers = <LR_MAIN_EN LR_MAIN_RU>; 
            bindings = <&to LR_SERV>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        /*
            |  F1   |  F2 |  F3 |  F4  |  F5  |                                                                    |  F6   |  F7   |  F8  |   F9  |  F10 |
            |  =    |  1  |  2  |  3   |  4   |  5   |                                                      |  6   |   7   |   8   |  9   |   0   |   -  |
            |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                                      |  Y   |   U   |   I   |  O   |   P   |   \  |
            |  ESC  |  A  |  S  |  D   |  F   |  G   |                                                      |  H   |   J   |   K   |  L   |   ;   |   '  |
            |   `   |  Z  |  X  |  C   |  V   |  B   | LSHFT | LCTRL | LOWER |      | LGUI  | RCTRL | RSHFT |  N   |   M   |   ,   |  .   |   /   | PGUP |
            | MAGIC | HOME| END | LEFT | RIGHT|      | BSPC  | DEL   | LALT  |      | RALT  | RET   | SPACE |      |  UP   | DOWN  |  [   |   ]   | PGDN |
        */

        LR_MAIN_EN {
            bindings = <
                &none          &none    &none    &none    &none                                                                                                                     &none    &none    &none     &none       &none
                &kp F1         &kp F2   &kp F3   &kp F4   &kp F5   &kp F6                                                                                                  &kp F7   &kp F8   &kp F9   &kp F10   &kp F11     &kp F12
                &kp ESC        &kp Q    &kp W    &kp E    &kp R    &kp T                                                                                                   &kp Y    &kp U    &kp I    &kp O     &kp P       &none
                &mt LWIN TAB   &kp A    &kp S    &kp D    &kp F    &kp G                                                                                                   &kp H    &kp J    &kp K    &kp L     &none       &kp BSPC
                &kp LCTRL      &kp Z    &kp X    &kp C    &kp V    &kp B    &kp LSHFT           &none            &none      &none   &none               &mo LR_WILDS       &kp N    &kp M    &none    &none     &kp COMMA   &kp DOT
                &none          &none    &none    &none    &none             &lt LR_NUMS SPACE   &mt LALT ENTER   &none      &none   &lt LR_SPEC ENTER   &lt LR_NAV SPACE            &none    &none    &none     &none       &none
            >;
        };

        LR_MAIN_RU {
            bindings = <
                &trans   &trans   &trans   &trans   &trans                                                                                    &trans        &trans      &trans    &trans      &trans
                &trans   &trans   &trans   &trans   &trans   &trans                                                                  &trans   &trans        &trans      &trans    &trans      &trans
                &trans   &trans   &trans   &trans   &trans   &cmt GRAVE T                                                            &trans   &trans        &trans      &trans    &trans      &kp LBKT
                &trans   &trans   &trans   &trans   &trans   &trans                                                                  &trans   &cmt SQT J    &trans      &trans    &none       &trans
                &trans   &trans   &trans   &trans   &trans   &trans         &trans   &trans   &trans      &trans   &trans   &trans   &trans   &cmt RBKT M   &kp COMMA   &kp DOT   &COMMA_RU   &DOT_RU
                &trans   &trans   &trans   &trans   &trans                  &trans   &trans   &trans      &trans   &trans   &trans            &trans        &trans      &trans    &trans      &trans
            >;
        };

        LR_NUMS {
            bindings = <
                &trans   &trans   &trans   &trans   &trans                                                                               &trans   &trans   &trans   &trans   &trans
                &trans   &trans   &trans   &trans   &trans   &trans                                                             &trans   &trans   &trans   &trans   &trans   &trans
                &trans   &none    &kp F7   &kp F8   &kp F9   &kp F10                                                            &none    &kp N7   &kp N8   &kp N9   &none    &none
                &trans   &none    &kp F4   &kp F5   &kp F6   &kp F11                                                            &none    &kp N4   &kp N5   &kp N6   &kp N0   &trans
                &trans   &none    &kp F1   &kp F2   &kp F3   &kp F12   &trans   &trans   &trans      &trans   &trans   &trans   &none    &kp N1   &kp N2   &kp N3   &trans   &trans
                &trans   &trans   &trans   &trans   &trans             &trans   &trans   &trans      &trans   &trans   &trans            &trans   &trans   &trans   &trans   &trans
            >;
        };

        LR_WILDS {
            bindings = <
                &trans      &trans       &trans     &trans     &trans                                                                                       &trans           &trans           &trans      &trans     &trans
                &trans      &trans       &trans     &trans     &trans      &trans                                                               &trans      &trans           &trans           &trans      &trans     &trans
                &kp GRAVE   &NUMBER_RU   &kp HASH   &kp PIPE   &kp AMPS    &kp CARET                                                            &kp PRCNT   &FSLH_BSLH       &kp ASTRK        &kp SQT     &kp DQT    &none
                &trans      &none        &kp AT     &kp EXCL   &kp QMARK   &none                                                                &kp EQUAL   &kp MINUS        &kp PLUS         &kp COLON   &kp SEMI   &trans
                &trans      &none        &kp DLLR   &none      &none       &none       &trans   &trans   &trans      &trans   &trans   &trans   &none       &L_PAR_BRC_BKT   &R_PAR_BRC_BKT   &kp LT      &kp GT     &trans
                &trans      &trans       &trans     &trans     &trans                  &trans   &trans   &trans      &trans   &trans   &trans               &trans           &trans           &trans      &trans     &trans
            >;
        };

        LR_NAV {
            bindings = <
                &trans   &trans   &trans   &trans   &trans                                                                                 &trans     &trans     &trans      &trans       &trans
                &trans   &trans   &trans   &trans   &trans   &trans                                                            &trans      &trans     &trans     &trans      &trans       &trans
                &trans   &trans   &trans   &trans   &trans   &trans                                                            &kp PG_UP   &kp HOME   &kp UP     &kp END     &kp C_NEXT   &kp K_APP
                &trans   &trans   &trans   &trans   &trans   &trans                                                            &kp PG_DN   &kp LEFT   &kp DOWN   &kp RIGHT   &kp C_PREV   &trans
                &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans      &trans   &trans   &trans   &none       &none      &none      &none       &trans       &trans
                &trans   &trans   &trans   &trans   &trans            &trans   &trans   &trans      &trans   &trans   &trans               &trans     &trans     &trans      &trans       &trans
            >;
        };
        
        LR_SPECIAL {
            bindings = <
                &trans   &none   &none   &none   &none                                                                            &none        &none          &none          &none   &none
                &trans   &none   &none   &none   &none   &none                                                            &none   &none        &none          &none          &none   &none
                &trans   &none   &none   &none   &none   &none                                                            &none   &kp C_PP     &kp C_PREV     &kp C_NEXT     &none   &kp DEL
                &trans   &none   &none   &none   &none   &none                                                            &none   &kp C_MUTE   &kp C_VOL_DN   &kp C_VOL_UP   &none   &none
                &trans   &none   &none   &none   &none   &none   &trans   &trans   &trans      &trans   &trans   &trans   &none   &none        &kp C_BRI_DN   &kp C_BRI_UP   &none   &kp PSCRN
                &trans   &none   &none   &none   &none           &trans   &trans   &trans      &trans   &trans   &trans           &none        &none          &none          &none   &none
            >;
        };

        LR_SERVICE {
            bindings = <
                &none            &none   &none   &none   &none                                                                                        &none   &none   &none   &none          &none
                &none            &none   &none   &none   &none   &none                                                                  &none         &none   &none   &none   &none          &none
                &to LR_MAIN_EN   &none   &none   &none   &none   &bootloader                                                            &bootloader   &none   &none   &none   &none          &to LR_MAIN_EN
                &none            &none   &none   &none   &none   &sys_reset                                                             &sys_reset    &none   &none   &none   &none          &none
                &none            &none   &none   &none   &none   &SRVC_TEST    &trans   &trans   &trans      &trans   &trans   &trans   &SRVC_TEST    &bt_0   &bt_1   &bt_2   &out OUT_USB   &bt BT_CLR
                &none            &none   &none   &none   &none                 &trans   &trans   &trans      &trans   &trans   &trans                 &none   &none   &none   &none          &none
            >;
        };
    };
};